/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("INPUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("INPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "INPUT";
}

SIGNAL("OUTPUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTPUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("OUTPUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTPUT";
}

SIGNAL("r0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("r0[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r0";
}

SIGNAL("r1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("r1[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r1";
}

SIGNAL("r2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("r2[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r2";
}

SIGNAL("r3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("r3[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("r3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "r3";
}

SIGNAL("ROMout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ROMout[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("ROMout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ROMout";
}

SIGNAL("RAMout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RAMout[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("RAMout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RAMout";
}

SIGNAL("FETCH")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EXEC1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EXEC2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EXEC3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("INPUT[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("INPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("OUTPUT[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("r0[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r0[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r1[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r2[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 190.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("r3[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 770.0;
		}
	}
}

TRANSITION_LIST("ROMout[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 100.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 100.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 100.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 100.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 60.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 210.0;
			LEVEL 1 FOR 60.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 210.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 270.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 270.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("ROMout[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 100.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 10.0;
		}
	}
}

TRANSITION_LIST("RAMout[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("RAMout[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("FETCH")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 710.0;
		}
	}
}

TRANSITION_LIST("EXEC1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 690.0;
		}
	}
}

TRANSITION_LIST("EXEC2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 240.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("EXEC3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 330.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "INPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "r0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "r0[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "r1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "r1[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "r2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
	CHILDREN = 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68;
}

DISPLAY_LINE
{
	CHANNEL = "r2[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "r3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
	CHILDREN = 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85;
}

DISPLAY_LINE
{
	CHANNEL = "r3[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "r3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
	CHILDREN = 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "OUTPUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
	CHILDREN = 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "ROMout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 0;
	CHILDREN = 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "RAMout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "FETCH";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EXEC1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EXEC2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EXEC3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
